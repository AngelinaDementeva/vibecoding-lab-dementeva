#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è webhook –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import logging
from flask import Flask, request
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route('/webhook', methods=['POST'])
def webhook():
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram
        update_data = request.get_json()
        
        if update_data:
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {update_data}")
            
            # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
            if 'message' in update_data and 'text' in update_data['message']:
                text = update_data['message']['text']
                chat_id = update_data['message']['chat']['id']
                
                if text == '/start':
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
                    send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –Ø webhook –±–æ—Ç! üöÄ")
                elif text == '/news':
                    send_message(chat_id, "üì∞ –ù–æ–≤–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ webhook!")
                else:
                    send_message(chat_id, f"–ü–æ–ª—É—á–µ–Ω–æ: {text}")
        
        return "OK", 200
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return "Error", 500

def send_message(chat_id, text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    try:
        import requests
        
        bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        
        data = {
            'chat_id': chat_id,
            'text': text
        }
        
        response = requests.post(url, json=data)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

@app.route('/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞."""
    return {
        "status": "healthy",
        "message": "Webhook bot is running!",
        "bot_token_configured": bool(os.getenv('TELEGRAM_BOT_TOKEN')),
        "news_api_configured": bool(os.getenv('NEWS_API_KEY'))
    }

@app.route('/', methods=['GET'])
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞."""
    return """
    <h1>News Bot Webhook</h1>
    <p>–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! üöÄ</p>
    <ul>
        <li><a href="/health">Health Check</a></li>
    </ul>
    """

if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ webhook –±–æ—Ç–∞...")
    logger.info("üåê Webhook endpoint: /webhook")
    logger.info("üìä Health check: /health")
    
    app.run(host='0.0.0.0', port=8000, debug=True)
