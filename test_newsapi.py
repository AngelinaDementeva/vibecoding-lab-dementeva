#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å NewsAPI
"""

import os
import json
import requests
from datetime import datetime, timedelta
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_news_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NewsAPI."""
    api_key = os.getenv('NEWS_API_KEY')
    
    if not api_key:
        print("‚ùå NEWS_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print(f"üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–ª—é—á: {api_key[:10]}...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-–Ω–æ–≤–æ—Å—Ç–µ–π
    print("\nüì∞ –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-–Ω–æ–≤–æ—Å—Ç–µ–π...")
    try:
        url = "https://newsapi.org/v2/top-headlines"
        params = {
            'apiKey': api_key,
            'country': 'us',
            'pageSize': 5
        }
        
        response = requests.get(url, params=params, timeout=15)
        response.raise_for_status()
        
        data = response.json()
        if data.get('status') == 'ok':
            articles = data.get('articles', [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(articles)} —Ç–æ–ø-–Ω–æ–≤–æ—Å—Ç–µ–π")
            
            for i, article in enumerate(articles[:3], 1):
                print(f"  {i}. {article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {article.get('source', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"     URL: {article.get('url', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}")
                print()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–ø-–Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
    print("üîç –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É 'AI'...")
    try:
        url = "https://newsapi.org/v2/everything"
        params = {
            'apiKey': api_key,
            'q': 'AI',
            'language': 'en',
            'sortBy': 'publishedAt',
            'pageSize': 3,
            'from': (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
        }
        
        response = requests.get(url, params=params, timeout=15)
        response.raise_for_status()
        
        data = response.json()
        if data.get('status') == 'ok':
            articles = data.get('articles', [])
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(articles)} –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∑–∞–ø—Ä–æ—Å—É 'AI'")
            
            for i, article in enumerate(articles, 1):
                print(f"  {i}. {article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"     –û–ø–∏—Å–∞–Ω–∏–µ: {article.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')[:100]}...")
                print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {article.get('source', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"     URL: {article.get('url', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}")
                print()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return False
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    print("üè∑Ô∏è –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º...")
    categories = ['technology', 'science', 'business']
    
    for category in categories:
        try:
            url = "https://newsapi.org/v2/top-headlines"
            params = {
                'apiKey': api_key,
                'category': category,
                'country': 'us',
                'pageSize': 2
            }
            
            response = requests.get(url, params=params, timeout=15)
            response.raise_for_status()
            
            data = response.json()
            if data.get('status') == 'ok':
                articles = data.get('articles', [])
                print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category}': {len(articles)} –Ω–æ–≤–æ—Å—Ç–µ–π")
                
                for article in articles:
                    print(f"  - {article.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}': {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}': {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NewsAPI –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    return True

def test_bot_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–æ—Ç–æ–º."""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –±–æ—Ç–æ–º...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –±–æ—Ç–∞
        from bot import NewsBot
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        bot = NewsBot()
        
        if bot.news_api_key:
            print(f"‚úÖ API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω: {bot.news_api_key[:10]}...")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
            import asyncio
            
            async def test_fetch():
                news = await bot._fetch_news()
                print(f"‚úÖ –ë–æ—Ç –ø–æ–ª—É—á–∏–ª {len(news)} –Ω–æ–≤–æ—Å—Ç–µ–π")
                
                for i, article in enumerate(news[:3], 1):
                    print(f"  {i}. {article['title']}")
                    print(f"     –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {article['category']}")
                    print(f"     –ò—Å—Ç–æ—á–Ω–∏–∫: {article['source']}")
                    print(f"     URL: {article['url']}")
                    print()
            
            asyncio.run(test_fetch())
            
        else:
            print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–æ—Ç–µ")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞: {e}")
        return False
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è NewsAPI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º NewsAPI
    api_success = test_news_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –±–æ—Ç–æ–º
    bot_success = test_bot_integration()
    
    print("\n" + "=" * 50)
    if api_success and bot_success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! NewsAPI –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")

if __name__ == '__main__':
    main()
