#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å NewsAPI
"""

import os
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_news_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ NewsAPI."""
    api_key = os.getenv('NEWS_API_KEY')
    
    if not api_key:
        print("‚ùå NEWS_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
    
    print(f"üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º API –∫–ª—é—á: {api_key[:10]}...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-–Ω–æ–≤–æ—Å—Ç–µ–π
    try:
        url = "https://newsapi.org/v2/top-headlines"
        params = {
            'apiKey': api_key,
            'category': 'technology',
            'country': 'us',
            'pageSize': 3
        }
        
        print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π...")
        response = requests.get(url, params=params, timeout=15)
        response.raise_for_status()
        
        data = response.json()
        
        if data.get('status') == 'ok':
            articles = data.get('articles', [])
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(articles)} –Ω–æ–≤–æ—Å—Ç–µ–π")
            
            for i, article in enumerate(articles[:2], 1):
                print(f"\nüì∞ –ù–æ–≤–æ—Å—Ç—å {i}:")
                print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {article.get('source', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"   URL: {article.get('url', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}")
                print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {article.get('description', '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è')[:100]}...")
            
            return True
        else:
            print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def test_search_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —á–µ—Ä–µ–∑ NewsAPI."""
    api_key = os.getenv('NEWS_API_KEY')
    
    if not api_key:
        print("‚ùå NEWS_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        url = "https://newsapi.org/v2/everything"
        params = {
            'apiKey': api_key,
            'q': 'artificial intelligence',
            'language': 'en',
            'sortBy': 'publishedAt',
            'pageSize': 2
        }
        
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É 'artificial intelligence'...")
        response = requests.get(url, params=params, timeout=15)
        response.raise_for_status()
        
        data = response.json()
        
        if data.get('status') == 'ok':
            articles = data.get('articles', [])
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π")
            
            for i, article in enumerate(articles[:1], 1):
                print(f"\nüì∞ –°—Ç–∞—Ç—å—è {i}:")
                print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {article.get('title', '–ù–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞')}")
                print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {article.get('source', {}).get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"   URL: {article.get('url', '–ù–µ—Ç —Å—Å—ã–ª–∫–∏')}")
            
            return True
        else:
            print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å NewsAPI")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π
    news_test = test_news_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    search_test = test_search_api()
    
    print("\n" + "=" * 50)
    if news_test and search_test:
        print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ! NewsAPI —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("üöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏.")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.")
    
    return news_test and search_test

if __name__ == '__main__':
    main()
